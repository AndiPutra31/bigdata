
						REVIEW PAPER

Pola mining dalam berbagai database seperti transaksi database, database time-series sudah umum 
dipelajari dalam penelitian data mining. Pada penelitian sebelum-sebelumnya sebagian besar menggunakan pendekatan Apriori. Namun outputnya masih "mahal", terutama pada pola yang 
besar dan ataupun yang panjang.Efisiensi mining dapat dicapai melalui tiga teknik , yaitu : 
1. Database yang besar dikompresi menjadi padat, berstruktur data yang lebih kecil dimana dapat menghindari biaya yang besar dan scan database yang berulang-ulang.
2. FP-tree mengadopsi metode pola pertumbuhan fragmen untuk menghindari biaya besar.
3. Sebuah basis partisi, metode divide and conquer digunakan untuk mengurangi tugas mining menjadi satu set tugas yang lebih kecil.

Tahapan metode dalam penelitian ini antara lain:
-Pembangunan pengisi FP-tree disk
Kunggulan dari metode ini yaitu proyeksi database sebagai pendekatan yang efektif. Merupakan alternatif yang menarik 
untuk membangun pengisi FP-tree disk. Pengaplikasiannya menggunakan sturktur B+ tree yang cukup populer digunakan dalam 
database relasional dan dapat digunakan untuk index FP-tree  juga.
-Update incremental dari FP-tree
Jika terwujud FP-tree mengambil 1 sebagai dukungan minimum, update tidak akan menimbulkan masalah sejak penambahan 
record yang baru. Namun, FP-tree yang penuh dapat menjadi masalah yang cukup besar. Sehingga pengaturan 1 sebagai 
dukungan minimum bukanlah menjadi solusi yang baik.
-Penggalian FP-tree dengan kendala
Di sini menampilkan bagaimana menerapkan struktur FP-tree untuk pertambangan pola yang sering oleh penggabungan kendala 
terkait dengan satu set item.
-Penggalian FP-tree dari frekuensi pola yang lain
Penggalian berbasis FP-tree dapat diperpanjang untuk banyak penggalian jenis lain yang menarik frekuensi pola. 

Kesimpulan dari paper ini penulis telah mengusulkan struktur data baru, frequent pattern tree  (FP-tree), untuk menyimpan 
dikompresi, informasi penting tentang frekuensi pola, dan pengembangan metode pola growth. Ada beberapa keuntungan dari 
FP-growth atas pendekatan lain:
	1. Ini membangun FP-tree yang sangat kompak, yang biasanya jauh lebih kecil daripada 
             database asli dan dengan demikian menyimpan scan database yang mahal dalam proses 
             penggalian berikutnya.
         2. Ini berlaku pada metode pola growth untuk menghindari generasi calon mahal dan diuji 	  
             secara berturut-turut dan sering 1-itemset ditemukan di (kondisional) FP-tree. 
         3. Ini berlaku pada partisi berbasis metode divide-and-conquer yang secara dramatis 
             mengurangi dari ukuran kondisi berbasis pola dan kondisi FP-tree. Beberapa teknik 
             optimasi yang lain, termasuk pola gen	erasi langsung untuk satu tree-path dan 
             mempekerjakan frekuensi peristiwa paling akhir sebagai akhiran, juga berkontribusi 
             terhadap efisiensi dari metode.
Saran yang diberikan adalah pendekatan untuk mengintegrasikan dua algoritma dan dinamis yang memilih algoritma berbasis 
H-struct dan FP-tree berdasarkan karakteristik dari distribusi arus data.
